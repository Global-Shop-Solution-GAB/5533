Program.Sub.ScreenSU.Start
Gui.frmWO..Create
Gui.frmWO..Caption("Auto Work Order Gen Dashboard")
Gui.frmWO..Size(16860,10770)
Gui.frmWO..MinX(16350)
Gui.frmWO..MinY(12825)
Gui.frmWO..Position(0,0)
Gui.frmWO..BackColor(-2147483633)
Gui.frmWO..MousePointer(0)
Gui.frmWO..Event(UnLoad,frmWO_UnLoad)
Gui.frmWO.lblStatus.Create(Label,"Loading WO Data....",False,1665,255,0,3240,150,True,0,"Arial",8,-2147483633,0)
Gui.frmWO.progBarStatus.Create(ProgressBar)
Gui.frmWO.progBarStatus.Visible(False)
Gui.frmWO.progBarStatus.Size(1815,150)
Gui.frmWO.progBarStatus.Position(5025,135)
Gui.frmWO.GsGCDemand.Create(GsGridControl)
Gui.frmWO.GsGCDemand.Size(7425,3195)
Gui.frmWO.GsGCDemand.Position(60,7005)
Gui.frmWO.GsGCDemand.Event(RowCellClick,Hyperlinks)
Gui.frmWO.lblSupply.Create(Label,"Supply",True,795,255,0,7575,6750,True,0,"Arial",8,-2147483633,0)
Gui.frmWO.lblSupply.FontStyle(True,False,False,False,False)
Gui.frmWO.GsGCSupply.Create(GsGridControl)
Gui.frmWO.GsGCSupply.Size(7455,3210)
Gui.frmWO.GsGCSupply.Position(7635,6990)
Gui.frmWO.GsGCSupply.Event(RowCellClick,Hyperlinks)
Gui.frmWO.lblDemand.Create(Label,"Demand",True,960,255,0,45,6750,True,0,"Arial",8,-2147483633,0)
Gui.frmWO.lblDemand.FontStyle(True,False,False,False,False)
Gui.frmWO.dtpCutoff.Create(DatePicker)
Gui.frmWO.dtpCutoff.Size(1425,285)
Gui.frmWO.dtpCutoff.Position(1320,60)
Gui.frmWO.dtpCutoff.Enabled(False)
Gui.frmWO.cmdRefresh.Create(Button)
Gui.frmWO.cmdRefresh.Size(390,330)
Gui.frmWO.cmdRefresh.Position(2805,60)
Gui.frmWO.cmdRefresh.Caption("REFRESH")
Gui.frmWO.cmdRefresh.Event(Click,InvCheck)
Gui.frmWO.chkCutoff.Create(CheckBox)
Gui.frmWO.chkCutoff.Size(1260,255)
Gui.frmWO.chkCutoff.Position(60,90)
Gui.frmWO.chkCutoff.Caption("Cutoff Date:")
Gui.frmWO.chkCutoff.Event(Click,chkCutoff_Click)
Gui.frmWO.GsGCWO.Create(GsGridControl)
Gui.frmWO.GsGCWO.Size(15015,6180)
Gui.frmWO.GsGCWO.Position(75,465)
Gui.frmWO.GsGCWO.Event(RowCellClick,GsGCWO_RowCellClick)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.sGsGCIcon.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
'BN, May 15, 2019
'Customer: Troxler
'This project is a modification of project 5381

'Features: 
'1. Auto WO dashboard (ARC 5381) will be modified so when we generate WO for demand being shown for a part, We will create individual work orders with the due dates driven by the respective Sales order or forecast order. 
'2. Additionally, We will have one WO created by multiplication of Inventory Order Qty
'3. The demand will also include forecast work orders. 


F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.sIcon.Declare
	V.Local.sGssLogo.Declare
	
	'Set Application Icon
	F.Intrinsic.String.Build("{0}\gss2.ico",V.Caller.ArtDir,v.Local.sIcon)
	Gui.frmWO..Icon(V.Local.sIcon)	
	'Set Pic Logo Image
	F.Intrinsic.String.Build("{0}\GAB_GSS_Logo_Green_Dash.png",V.Caller.ArtDir,V.Local.sGssLogo)
	'Gui.frmWO.picGSSLogo.Picture(V.Local.sGssLogo)	
	'Set Logo in GsGridControl Group Header
	F.Intrinsic.String.Build("{0}\GAB_GSS_Logo_Green_Dash.png",V.Caller.ArtDir,V.Global.sGsGCIcon)
	
	F.ODBC.Connection!con.OpenCompanyConnection(500)
	
	Gui.frmWO..Show
	
	F.Intrinsic.Control.CallSub(SetContextMenus)
	F.Intrinsic.Control.CallSub(SetTabAnchors)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.frmWO_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.ODBC.Connection!con.Close
	F.Intrinsic.Control.End
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmWO_UnLoad.End

Program.Sub.SetTabAnchors.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	'0 - None		1 - Top		2 - Bottom		4 - Left		8 - Right
	Gui.frmWO.GsGCWO.Anchor(15)
	gui.frmWO.GsGCDemand.anchor(14)
	gui.frmWO.GsGCSupply.anchor(10)
	gui.frmWO.lblDemand.anchor(6)
	gui.frmWO.lblSupply.anchor(10)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetTabAnchors.End

Program.Sub.frmWO_Resize.Start
'	F.Intrinsic.Control.Try
'	V.Local.sError.Declare

'	V.Local.iGsGCHt.Declare
'	V.Local.iGsGCWt.Declare
'	V.Local.iWidth.Declare
'	V.Local.iX1.Declare
'	V.Local.iX2.Declare
'	V.Local.iY1.Declare
'	V.Local.iY2.Declare
'	
'	F.Intrinsic.Math.Div(V.Screen.frmWO!tabWO.Width,2,V.Local.iWidth)
'	F.Intrinsic.Math.Sub(V.Local.iWidth,15,V.Local.iWidth)
'	Gui.frmWO.GsGCDemand.Size(V.Local.iWidth,3875)
'	Gui.frmWO.GsGCSupply.Size(V.Local.iWidth,3875)
'	'Demand
'	F.Intrinsic.Math.Add(V.Screen.frmWO!tabWO.Top,V.Screen.frmWO!tabWO.Height,80,V.Local.iY1)
'	Gui.frmWO.lblDemand.Position(V.Screen.frmWO!tabWO.Left,V.Local.iY1)
'	F.Intrinsic.Math.Add(V.Screen.frmWO!lblDemand.Top,V.Screen.frmWO!lblDemand.Height,V.Local.iY2)
'	Gui.frmWO.GsGCDemand.Position(V.Screen.frmWO!tabWO.Left,V.Local.iY2)
'	'Supply
'	F.Intrinsic.Math.Add(V.Screen.frmWO!GsGCDemand.Left,V.Screen.frmWO!GsGCDemand.Width,15,V.Local.iX2)
'	Gui.frmWO.lblSupply.Position(V.Local.iX2,V.Local.iY1)
'	Gui.frmWO.GsGCSupply.Position(V.Local.iX2,V.Local.iY2)

'	F.Intrinsic.Control.Catch
'		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
'		F.Intrinsic.UI.Msgbox(V.Local.sError)
'		F.Intrinsic.Control.End 
'	F.Intrinsic.Control.EndTry
Program.Sub.frmWO_Resize.End

Program.Sub.SetContextMenus.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmWO..ContextMenuCreate("ctxWO")
	Gui.frmWO.GsGCWO.ContextMenuAttach("ctxWO")
	Gui.frmWO..ContextMenuAddItem("ctxWO","Refresh",0,"Refresh")
	Gui.frmWO..ContextMenuAddItem("ctxWO","Export",0,"Export")
	Gui.frmWO..ContextMenuAddItem("ctxWO","Exp",3)
	Gui.frmWO..ContextMenuAddItem("ctxWO","SelAll",0,"Select All")
	Gui.frmWO..ContextMenuAddItem("ctxWO","DeselAll",0,"Deselect All")
	Gui.frmWO..ContextMenuAddItem("ctxWO","Exp",3)
	Gui.frmWO..ContextMenuAddItem("ctxWO","New",0,"Create WO (Manual)")
	Gui.frmWO..ContextMenuAddItem("ctxWO","NewAuto",0,"Create WO (Auto)")
	Gui.frmWO..ContextMenuAddItem("ctxWO","NewMulti",0,"Create WO (Multi-Part)")
	Gui.frmWO..ContextMenuSetItemEventHandler("ctxWO","Refresh","InvCheck")
	Gui.frmWO..ContextMenuSetItemEventHandler("ctxWO","Export","GsGCExport")
	Gui.frmWO..ContextMenuSetItemEventHandler("ctxWO","SelAll","MenuClick")
	Gui.frmWO..ContextMenuSetItemEventHandler("ctxWO","DeselAll","MenuClick")
	Gui.frmWO..ContextMenuSetItemEventHandler("ctxWO","New","MenuClick")
	Gui.frmWO..ContextMenuSetItemEventHandler("ctxWO","NewAuto","MenuClick")
	Gui.frmWO..ContextMenuSetItemEventHandler("ctxWO","NewMulti","MenuClick")
	
	Gui.frmWO..ContextMenuCreate("ctxDemand")
	Gui.frmWO.GsGCDemand.ContextMenuAttach("ctxDemand")
	Gui.frmWO..ContextMenuAddItem("ctxDemand","Export",0,"Export")
	Gui.frmWO..ContextMenuSetItemEventHandler("ctxDemand","Export","GsGCExport")
	
	Gui.frmWO..ContextMenuCreate("ctxSupply")
	Gui.frmWO.GsGCSupply.ContextMenuAttach("ctxSupply")
	Gui.frmWO..ContextMenuAddItem("ctxSupply","Export",0,"Export")
	Gui.frmWO..ContextMenuSetItemEventHandler("ctxSupply","Export","GsGCExport")

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End

Program.Sub.GsGCExport.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sForm.Declare
	V.Local.sControl.Declare
	
	V.Local.sForm.Set("frmWO")
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXWO")
			V.Local.sControl.Set("GsGCWO")
			
		F.Intrinsic.Control.Case("CTXDEMAND")
			V.Local.sControl.Set("GsGCDemand")
			
		F.Intrinsic.Control.Case("CTXSUPPLY")
			V.Local.sControl.Set("GsGCSupply")
	F.Intrinsic.Control.EndSelect

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.Control.If(V.Local.bExcel)
		V.Local.sExt.Set("xlsx")
	F.Intrinsic.Control.Else
		V.Local.sExt.Set("csv")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("{0}\GAB_5381_{1}_Export.{2}",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sExt,V.Local.sFileExport)
	F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
	F.Intrinsic.Control.If(V.Local.bFileLocked)
		F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
	F.Intrinsic.Control.Else
		Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,V.Local.sExt)
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CatchWhen(5700)
	F.Intrinsic.UI.Msgbox("No Data to Export.","Export")
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.GsGCExport.End

Program.Sub.MenuClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRow.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.ItemName)
		F.Intrinsic.Control.Case("SELALL")
			F.Data.DataTable.SetValue("dtWO",-1,"SELECT",True)
			
		F.Intrinsic.Control.Case("DESELALL")
			F.Data.DataTable.SetValue("dtWO",-1,"SELECT",False)
			
		F.Intrinsic.Control.Case("NEW")
			Gui.frmWO.GsGCWO.GetSelectedRows("gvWO",V.Local.iRow)
			F.Intrinsic.Control.CallSub(CreateManualWO,"Row",V.Local.iRow)
			
		F.Intrinsic.Control.Case("NEWAUTO")
			F.Intrinsic.Control.CallSub(CreateAutoWO,"Multi",False)
		
		F.Intrinsic.Control.Case("NEWMULTI")
			F.Intrinsic.Control.CallSub(CreateAutoWO,"Multi",True)
		
	F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.MenuClick.End

Program.Sub.CreateManualWO.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRowCnt.Declare
	V.Local.iRowCnt2.Declare
	V.Local.iPID.Declare
	V.Local.bPID.Declare
	
	'Check WO count before opening screen
	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM JOB_HEADER;",V.Local.iRowCnt)

	'Disable grids
	Gui.frmWO.GsGCWO.Enabled(False)
	Gui.frmWO.GsGCDemand.Enabled(False)
	Gui.frmWO.GsGCSupply.Enabled(False)
	
	'Call WO Screen and loop until the screen is closed out
	F.Global.General.LaunchMenuTask(527,2,V.Local.iPID)
	F.Intrinsic.Task.PIDRunning(V.Local.iPID,V.Local.bPID)
	F.Intrinsic.Control.DoUntil(V.Local.bPID,=,False)
		F.Intrinsic.UI.SleepMS(10)
		F.Intrinsic.Task.PIDRunning(V.Local.iPID,V.Local.bPID)
	F.Intrinsic.Control.Loop
	
	'Enable Grids
	Gui.frmWO.GsGCWO.Enabled(True)
	Gui.frmWO.GsGCDemand.Enabled(True)
	Gui.frmWO.GsGCSupply.Enabled(True)

	'Check WO count after closing WO screen
	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM JOB_HEADER;",V.Local.iRowCnt2)

	'If WO counts do not match the assumption is that the WO was created and the line will be removed
	F.Intrinsic.Control.If(V.Local.iRowCnt,<>,V.Local.iRowCnt2)
		F.Data.DataTable.DeleteRow("dtWO",V.Args.Row)
		F.Data.DataTable.AcceptChanges("dtWO")
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.CreateManualWO.End

Program.Sub.CreateAutoWO.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.sDir.Declare
	V.Local.iCnt.Declare
	V.Local.sSelect.Declare
	V.Local.sData.Declare
	V.Local.sFile.Declare
	V.Local.iRow.Declare
	V.Local.dDueDate.Declare
	V.Local.iRunQty.Declare
	
	'Disable grids
	Gui.frmWO.GsGCWO.Enabled(False)
	Gui.frmWO.GsGCDemand.Enabled(False)
	Gui.frmWO.GsGCSupply.Enabled(False)
	
	'Create Directory
	F.Intrinsic.String.Build("{0}\AUTOWO",V.Caller.FilesDir,V.Local.sDir)
	F.Intrinsic.File.CreateDir(V.Local.sDir)
	
	'Set File Path
	F.Intrinsic.String.Build("{0}\UPLIV950.TXT",V.Caller.FilesDir,V.Local.sFile)

	'Get Selected Records and Create WO File (UPLIV950.TXT)
	F.Data.DataTable.Select("dtWO","[SELECT] = 1",V.Local.sSelect)
	F.Intrinsic.Control.If(V.Local.sSelect.IsNoReturn)
		F.Intrinsic.UI.Msgbox("There are no records selected.","Auto Gen WO")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
		'Loop through orders and create WO file
		F.Intrinsic.StringBuilder.Create("DATA")
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSelect.UBound,1)
			V.Local.iRow.Set(V.Local.sSelect(V.Local.iCnt))
			F.Intrinsic.Math.Mult(V.DataTable.dtWO(V.Local.iRow).RUNQTY!FieldVal,10000,V.Local.iRunQty)
			V.Local.dDueDate.Set(V.DataTable.dtWO(V.Local.iCnt).DUEDATE!FieldVal)
			F.Intrinsic.String.Build("{0},{1},{2},{3},{4}",V.DataTable.dtWO(V.Local.iRow).PART!FieldValTrim,V.DataTable.dtWO(V.Local.iRow).LOCATION!FieldValTrim,"",V.Local.iRunQty,V.Local.dDueDate.FormatYYYYMMDD,V.Local.sData)
			F.Intrinsic.StringBuilder.AppendLine("DATA",V.Local.sData)
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf
	
	'V.DataTable.dtWO(V.Local.iRow).DESCRIPTION!FieldValTrim
	
	'Create file from data
	F.Intrinsic.StringBuilder.ToString("DATA",V.Local.sData)
	F.Intrinsic.File.String2File(V.Local.sFile,V.Local.sData)
	F.Intrinsic.StringBuilder.Dispose("DATA")
		
	'Schedule WOs
	F.Intrinsic.Control.If(V.Args.Multi)
		F.Global.General.CallWrapperSync(50,"INV950/C")
	F.Intrinsic.Control.Else
		F.Global.General.CallWrapperSync(50,"INV950/S")
	F.Intrinsic.Control.EndIf
	
	'Remove Selected Records
	F.Intrinsic.Control.For(V.Local.iCnt,V.Local.sSelect.UBound,0,-1)
		F.Data.DataTable.DeleteRow("dtWO",V.Local.sSelect(V.Local.iCnt))
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Data.DataTable.AcceptChanges("dtWO")
	
	'Enable Grids
	Gui.frmWO.GsGCWO.Enabled(True)
	Gui.frmWO.GsGCDemand.Enabled(True)
	Gui.frmWO.GsGCSupply.Enabled(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.CreateAutoWO.End

Program.Sub.chkCutoff_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.Screen.frmWO!chkCutoff.Value,=,1)
		Gui.frmWO.dtpCutoff.Enabled(True)
	F.Intrinsic.Control.Else
		Gui.frmWO.dtpCutoff.Enabled(False)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.chkCutoff_Click.End

Program.Sub.InvCheck.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare
	V.Local.iCnt.Declare
	V.Local.fSum1.Declare
	V.Local.fSum2.Declare
	V.Local.fCurOnHand.Declare
	V.Local.fBalance.Declare
	V.Local.bDic.Declare
	V.Local.dCutoff.Declare

	F.Intrinsic.Control.If(V.DataTable.dtInvCheck.Exists)
		F.Data.DataTable.Close("dtInvCheck")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.DataTable.dtDemand.Exists)
		Gui.frmWO.lblDemand.Caption("Demand")
		Gui.frmWO.GsGCDemand.ClearRows("gvDemand")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtSupply.Exists)
		Gui.frmWO.lblSupply.Caption("Supply")
		Gui.frmWO.GsGCSupply.ClearRows("gvSupply")
	F.Intrinsic.Control.EndIf
	
	Gui.frmWO.lblStatus.Caption("Loading Work Orders....")
	Gui.frmWO.lblStatus.Visible(True)
	Gui.frmWO.progBarStatus.Visible(True)
	
	V.Local.dCutoff.Set(V.Screen.frmWO!dtpCutoff.Value)

	F.Data.DataTable.CreateFromSQL("dtInvCheck","con","SELECT A.PART+A.LOCATION AS PMAST, A.PART, A.LOCATION, A.DESCRIPTION, A.PRODUCT_LINE, A.CODE_SORT, QTY_ONHAND, QTY_ORDER, QTY_REORDER, A.QTY_ONORDER_WO, A.TIME_MATERIAL_LEAD FROM V_INVENTORY_MSTR A JOIN V_INVENTORY_MST2 B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE B.CODE_SOURCE IN ('M');",True)
	F.Data.DataTable.AddColumn("dtInvCheck","QTY_COMMITTED_WO",Float,0.0000)
	F.Data.DataTable.AddColumn("dtInvCheck","QTY_COMMITTED_SO",Float,0.0000)
	F.Data.DataTable.AddColumn("dtInvCheck","CurOnHand",Float,0.0000)
	F.Data.DataTable.AddColumn("dtInvCheck","BALANCE",Float,0.0000)
	F.Data.DataTable.AddExpressionColumn("dtInvCheck","QTY_REQUIRED",Float,"QTY_COMMITTED_WO+QTY_COMMITTED_SO")
	'WO Requirements
	F.Intrinsic.Control.If(V.Screen.frmWO!chkCutoff.Value,=,0)
		F.Data.Dictionary.CreateFromSQL("dicJobCom","con","SELECT PART+LOCATION AS PMAST,SUM(QTY_COMMITTED-QTY_ISSUED) AS QTY_COMMITTED FROM V_JOB_COMMITMENTS GROUP BY PMAST;")
		F.Data.Dictionary.SetDefaultReturn("dicJobCom",0.0000)
		F.Data.DataTable.FillFromDictionary("dtInvCheck","dicJobCom","PMAST","QTY_COMMITTED_WO")
		F.Data.Dictionary.Close("dicJobCom")
		
		F.Data.Dictionary.CreateFromSQL("dicSOCom","con","SELECT PART+LOCATION AS PMAST,SUM(QTY_BO) AS QTY_COMMITTED FROM V_ORDER_LINES GROUP BY PMAST;")
		F.Data.Dictionary.SetDefaultReturn("dicSOCom",0.0000)
		F.Data.DataTable.FillFromDictionary("dtInvCheck","dicSOCom","PMAST","QTY_COMMITTED_SO")
		F.Data.Dictionary.Close("dicSOCom")
		
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("SELECT A.PART+A.LOCATION AS PMAST,SUM(QTY_COMMITTED-QTY_ISSUED) AS QTY_COMMITTED FROM V_JOB_COMMITMENTS A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE DATEADD(DAY,-TIME_MATERIAL_LEAD,A.DATE_DUE) <= '{0}' GROUP BY PMAST;",V.Local.dCutoff.PervasiveDate,V.Local.sSQL)
		F.Data.Dictionary.CreateFromSQL("dicJobCom","con",V.Local.sSQL)
		F.Data.Dictionary.SetDefaultReturn("dicJobCom",0.0000)
		F.Data.DataTable.FillFromDictionary("dtInvCheck","dicJobCom","PMAST","QTY_COMMITTED_WO")
		F.Data.Dictionary.Close("dicJobCom")
		
		F.Intrinsic.String.Build("SELECT A.PART+A.LOCATION AS PMAST,SUM(QTY_BO) AS QTY_COMMITTED FROM V_ORDER_LINES A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE DATEADD(DAY,-TIME_MATERIAL_LEAD,A.DATE_ITEM_PROM) <= '{0}' GROUP BY PMAST;",V.Local.dCutoff.PervasiveDate,V.Local.sSQL)
		F.Data.Dictionary.CreateFromSQL("dicSOCom","con",V.Local.sSQL)
		F.Data.Dictionary.SetDefaultReturn("dicSOCom",0.0000)
		F.Data.DataTable.FillFromDictionary("dtInvCheck","dicSOCom","PMAST","QTY_COMMITTED_SO")
		F.Data.Dictionary.Close("dicSOCom")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtInvCheck.RowCount--,1)
		F.Intrinsic.Math.Add(V.DataTable.dtInvCheck(V.Local.iCnt).QTY_ONHAND!FieldValFloat,V.DataTable.dtInvCheck(V.Local.iCnt).QTY_ONORDER_WO!FieldValFloat,V.Local.fSum1)
		F.Intrinsic.Math.Add(V.DataTable.dtInvCheck(V.Local.iCnt).QTY_COMMITTED_WO!FieldValFloat,V.DataTable.dtInvCheck(V.Local.iCnt).QTY_COMMITTED_SO!FieldValFloat,V.DataTable.dtInvCheck(V.Local.iCnt).QTY_REORDER!FieldValFloat,V.Local.fSum2)
		V.Local.fCurOnHand.Set(V.Local.fSum1)
		F.Intrinsic.Math.Sub(V.Local.fSum1,V.Local.fSum2,V.Local.fBalance)
		F.Data.DataTable.SetValue("dtInvCheck",V.Local.iCnt,"CurOnHand",V.Local.fCurOnHand,"BALANCE",V.Local.fBalance)
	F.Intrinsic.Control.Next(V.Local.iCnt)

	'This is the list of parts to loop through 
	F.Data.DataView.Create("dtInvCheck","dvInvCheck",22,"BALANCE < 0","PMAST ASC")

	F.Intrinsic.Control.CallSub(LoadMRP)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.InvCheck.End

Program.Sub.LoadMRP.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iCnt2.Declare
	V.Local.iNext.Declare
	V.Local.sFilter.Declare
	V.Local.fCurOnHand.Declare
	V.Local.fQty.Declare
	V.Local.fNextQty.Declare
	V.Local.fDiff.Declare
	V.Local.fDiff2.Declare
	V.Local.sRunQty.Declare
	V.Local.fRunQty.Declare
	V.Local.fDecimal.Declare
	V.Local.fPostOnHand.Declare
	V.Local.fOrderQty.Declare
	V.Local.fOnHandQty.Declare
	V.Local.fReqdQty.Declare
	V.Local.fOnOrder.Declare
	V.Local.fReOrderQty.Declare
	V.Local.sPartDesc.Declare
	V.Local.fLeadTime.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sPL.Declare
	V.Local.sSortCode.Declare
	V.Local.dDateDue.Declare
	V.Local.sSign.Declare
	V.Local.sSQL.Declare
	V.Local.dCutoff.Declare
	V.Local.fCommit.Declare
	v.Local.fOnHandSum.Declare
	V.Local.sSelect.Declare
	V.Local.sROPParts.Declare

	F.Intrinsic.Control.If(V.DataTable.dtJobs.Exists)
		F.Data.DataTable.Close("dtJobs")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.DataTable.dtMRP.Exists)
		F.Data.DataTable.Close("dtMRP")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.Screen.frmWO!chkCutoff.Value,=,0)
		F.Data.DataTable.CreateFromSQL("dtJobs","con","SELECT PART,LOCATION,'Work Order' AS SOURCE,JOB,SUFFIX,SEQUENCE,QTY_COMMITTED-QTY_ISSUED AS QUANTITY,DATE_DUE FROM V_JOB_COMMITMENTS UNION SELECT PART,LOCATION,'Sales Order' AS SOURCE,ORDER_NO AS JOB,LEFT(RECORD_NO,3) AS SUFFIX,'' AS SEQ,QTY_BO AS QUANTITY,DATE_ITEM_PROM AS DATE_DUE FROM V_ORDER_LINES ORDER BY PART,DATE_DUE ASC;",True)
	F.Intrinsic.Control.Else
		V.Local.dCutoff.Set(V.Screen.frmWO!dtpCutoff.Value)
		F.Intrinsic.String.Build("SELECT A.PART,A.LOCATION,'Work Order' AS SOURCE,JOB,SUFFIX,SEQUENCE,QTY_COMMITTED-QTY_ISSUED AS QUANTITY,DATE_DUE FROM V_JOB_COMMITMENTS A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE DATEADD(DAY,-TIME_MATERIAL_LEAD,A.DATE_DUE) <= '{0}' UNION SELECT A.PART,A.LOCATION,'Sales Order' AS SOURCE,ORDER_NO AS JOB,LEFT(RECORD_NO,3) AS SUFFIX,'' AS SEQ,QTY_BO AS QUANTITY,DATE_ITEM_PROM AS DATE_DUE FROM V_ORDER_LINES A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE DATEADD(DAY,-TIME_MATERIAL_LEAD,A.DATE_ITEM_PROM) <= '{0}' ORDER BY PART,DATE_DUE ASC;",V.Local.dCutoff.PervasiveDate,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtJobs","con",V.Local.sSQL,True)
	F.Intrinsic.Control.EndIf
	
	'Add in Reorder Point Parts
	F.Data.DataTable.Select("dtInvCheck","BALANCE < 0 AND QTY_REQUIRED = 0",V.Local.sSelect)
	F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSelect.UBound,1)
			F.Intrinsic.Control.If(V.Local.iCnt,=,0)
				F.Intrinsic.String.Build("'{0}'",V.DataTable.dtInvCheck(V.Local.sSelect(V.Local.iCnt)).PMAST!FieldVal,V.Local.sROPParts)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0},'{1}'",V.Local.sROPParts,V.DataTable.dtInvCheck(V.Local.sSelect(V.Local.iCnt)).PMAST!FieldVal,V.Local.sROPParts)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.String.Build("SELECT PART,LOCATION,'Reorder Point' AS SOURCE,'' AS JOB,'' AS SUFFIX,'' AS SEQUENCE,QTY_REORDER-QTY_ONHAND AS QUANTITY,CURDATE() AS DATE_DUE FROM V_INVENTORY_MSTR WHERE PART+LOCATION IN ({0});",V.Local.sROPParts,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtROPParts","con",V.Local.sSQL,True)
		F.Data.DataTable.Merge("dtROPParts","dtJobs",True,3)
		F.Data.DataTable.Close("dtROPParts")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataView.dtInvCheck!dvInvCheck.RowCount,=,0)
		Gui.frmWO.lblStatus.Visible(False)
		Gui.frmWO.progBarStatus.Visible(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	Gui.frmWO.progBarStatus.Min(0)
	F.Intrinsic.Control.If(V.DataView.dtInvCheck!dvInvCheck.RowCount,<>,0)
		Gui.frmWO.progBarStatus.Max(V.DataView.dtInvCheck!dvInvCheck.RowCount)
	F.Intrinsic.Control.Else
		Gui.frmWO.progBarStatus.Max(100)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtInvCheck!dvInvCheck.RowCount--,1)
		Gui.frmWO.progBarStatus.Value(V.Local.iCnt)
		F.Intrinsic.String.Replace(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).PART!FieldValTrim,"'","''",V.Local.sPart)
		F.Intrinsic.String.Replace(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).LOCATION!FieldValTrim,"'","''",V.Local.sLoc)
		F.Intrinsic.String.Build("PART = '{0}' AND LOCATION = '{1}'",V.Local.sPart,V.Local.sLoc,V.Local.sFilter)
		F.Data.DataView.Create("dtJobs","dvJobs",22,V.Local.sFilter,"PART ASC,LOCATION ASC,DATE_DUE ASC")
		
		V.Local.iCnt2.Set(0)
		V.Local.iNext.Set(0)
		V.Local.fQty.Set(0)
		V.Local.fNextQty.Set(0)
		V.Local.fDiff.Set(0)
		V.Local.fDiff2.Set(0)
		V.Local.fRunQty.Set(0)
		V.Local.sRunQty.Set("")
		V.Local.sSign.Set("")
		V.Local.fDecimal.Set(0)
		V.Local.fPostOnHand.Set(0)
		V.Local.fCurOnHand.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).CurOnHand!FieldValFloat)
		V.Local.sPartDesc.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).DESCRIPTION!FieldValTrim)
		V.Local.fLeadTime.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).TIME_MATERIAL_LEAD!FieldValFloat)
		V.Local.fOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ORDER!FieldValFloat)
		V.Local.fOnHandQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ONHAND!FieldValFloat)
		V.Local.fReqdQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_REQUIRED!FieldValFloat)
		V.Local.fReOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_REORDER!FieldValFloat)
		F.Intrinsic.Date.DateAdd("D",V.Local.fLeadTime,V.Ambient.Date,V.Local.dDateDue)
		V.Local.sPL.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).PRODUCT_LINE!FieldValTrim)
		V.Local.sSortCode.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).CODE_SORT!FieldValTrim)
		F.Intrinsic.Math.Add(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_COMMITTED_WO!FieldValFloat,V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_COMMITTED_SO!FieldValFloat,V.Local.fCommit)
		F.Intrinsic.Math.Add(V.Local.fOnHandQty,V.Local.fOnOrder,V.Local.fOnHandSum)
		
		F.Intrinsic.Control.If(V.DataTable.dtMRP.Exists,=,False)
			F.Data.DataView.ToDataTable("dtJobs","dvJobs","dtMRP",True)
			F.Data.DataTable.AddColumn("dtMRP","CURONHAND",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","CURONHAND2",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","RUNQTY",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","POSTONHAND",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","DESCRIPTION",String,"")
			F.Data.DataTable.AddColumn("dtMRP","PL",String,"")
			F.Data.DataTable.AddColumn("dtMRP","SORTCODE",String,"")
			F.Data.DataTable.AddColumn("dtMRP","LEADTIME",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","ORDERQTY",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","ONHANDQTY",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","REQDQTY",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","ONORDER",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","REORDERPT",Float,0)
		F.Intrinsic.Control.Else
			F.Data.DataView.ToDataTable("dtJobs","dvJobs","dtMRPMerge",True)
			F.Data.DataTable.AddColumn("dtMRPMerge","CURONHAND",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","CURONHAND2",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","RUNQTY",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","POSTONHAND",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","DESCRIPTION",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","PL",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","SORTCODE",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","LEADTIME",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","ORDERQTY",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","ONHANDQTY",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","REQDQTY",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","ONORDER",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","REORDERPT",Float,0)
			F.Data.DataTable.Merge("dtMRPMerge","dtMRP",True,3)
			F.Data.DataTable.Close("dtMRPMerge")
		F.Intrinsic.Control.EndIf
		'Create MRP DataView
		F.Data.DataView.Create("dtMRP","dvMRP",22,V.Local.sFilter,"DATE_DUE ASC,JOB ASC,SUFFIX ASC")
		
		'Retrieve amount to purchase
		F.Intrinsic.Math.Add(V.Local.fReqdQty,V.Local.fReOrderQty,V.Local.fDiff)
		F.Intrinsic.Math.Sub(V.Local.fDiff,V.Local.fCurOnHand,V.Local.fDiff)
		F.Intrinsic.Control.If(V.Local.fOrderQty,=,0)
			V.Local.fOrderQty.Set(1)
			V.Local.fRunQty.Set(V.Local.fDiff)
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Div(V.Local.fDiff,V.Local.fOrderQty,V.Local.fRunQty)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Math.Abs(V.Local.fRunQty,V.Local.fRunQty)
		F.Intrinsic.String.Split(V.Local.fRunQty,".",V.Local.sRunQty)
		V.Local.fRunQty.Set(V.Local.sRunQty(0).Float)
		F.Intrinsic.Control.If(V.Local.sRunQty(1),<>,"OOB")
			F.Intrinsic.String.Left(V.Local.sRunQty(1),2,V.Local.sRunQty)
			V.Local.fDecimal.Set(V.Local.sRunQty.Float)
			F.Intrinsic.Control.If(V.Local.fDecimal,>,0)
				F.Intrinsic.Math.Add(V.Local.fRunQty,1,V.Local.fRunQty)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.Local.fOrderQty,=,1)
		F.Intrinsic.Control.AndIf(V.Local.fRunQty,=,1)
			F.Intrinsic.Math.Mult(V.Local.fDiff,V.Local.fOrderQty,V.Local.fRunQty)
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Mult(V.Local.fRunQty,V.Local.fOrderQty,V.Local.fRunQty)
		F.Intrinsic.Control.EndIf
		
		V.Local.fOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ORDER!FieldValFloat)
		
		'MRP Part
		F.Intrinsic.Control.For(V.Local.iCnt2,0,V.DataView.dtMRP!dvMRP.RowCount--,1)
			V.Local.fQty.Set(V.DataView.dtMRP!dvMRP(V.Local.iCnt2).QUANTITY!FieldValFloat)
			V.Local.fOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ORDER!FieldValFloat)
			
			F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
				V.Local.fDiff.Set(V.Local.fOnHandQty)
				F.Intrinsic.Math.Sub(V.Local.fOnHandQty,V.Local.fQty,V.Local.fPostOnHand)
			F.Intrinsic.Control.Else
				V.Local.fDiff.Set(V.Local.fPostOnHand)
				F.Intrinsic.Math.Sub(V.Local.fPostOnHand,V.Local.fQty,V.Local.fPostOnHand)
			F.Intrinsic.Control.EndIf

			F.Intrinsic.Control.If(V.Local.fPostOnHand,>=,V.Local.fReOrderQty)
				F.Data.DataView.SetValue("dtMRP","dvMRP",V.Local.iCnt2,"CURONHAND",V.Local.fDiff,"RUNQTY",0,"POSTONHAND",V.Local.fPostOnHand,"DESCRIPTION",V.Local.sPartDesc,"PL",V.Local.sPL,"SORTCODE",V.Local.sSortCode,"LEADTIME",V.Local.fLeadTime,"CURONHAND2",V.Local.fCurOnHand,"ORDERQTY",V.Local.fOrderQty,"ONHANDQTY",V.Local.fOnHandQty,"REQDQTY",V.Local.fReqdQty,"ONORDER",V.Local.fOnOrder,"REORDERPT",V.Local.fReOrderQty)
			F.Intrinsic.Control.Else
				F.Data.DataView.SetValue("dtMRP","dvMRP",V.Local.iCnt2,"CURONHAND",V.Local.fDiff,"RUNQTY",V.Local.fRunQty,"POSTONHAND",V.Local.fPostOnHand,"DESCRIPTION",V.Local.sPartDesc,"PL",V.Local.sPL,"SORTCODE",V.Local.sSortCode,"LEADTIME",V.Local.fLeadTime,"CURONHAND2",V.Local.fCurOnHand,"ORDERQTY",V.Local.fOrderQty,"ONHANDQTY",V.Local.fOnHandQty,"REQDQTY",V.Local.fReqdQty,"ONORDER",V.Local.fOnOrder,"REORDERPT",V.Local.fReOrderQty)
				F.Intrinsic.Control.ExitFor(V.Local.iCnt2)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt2)
		
		F.Data.DataView.Close("dtMRP","dvMRP")
		F.Data.DataView.Close("dtJobs","dvJobs")
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.Control.CallSub(LoadWOs)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadMRP.End

Program.Sub.LoadWOs.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.fLeadTime.Declare
	V.Local.dDateDue.Declare
	V.Local.dDatePurch.Declare
	V.Local.sDatePurch.Declare
	V.Local.fRunQty.Declare
	V.Local.iCnt2.Declare
	V.Local.sSelect.Declare
	V.Local.sFilter.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	v.Local.sPartLoc.Declare	
	
	'BN May 2019
	v.Local.fInvRunQty.Declare
	v.Local.iNumOfRecord.Declare
	v.Local.fHold.Declare
	v.Local.dDueDate.Declare
	v.Local.sDesc.Declare
	v.Local.sPL.Declare
	v.Local.sSortCode.Declare
	v.Local.fOnHandQty.Declare
	v.Local.bRTRCOMPL.Declare
	v.Local.bBOMCOMPL.Declare
	v.Local.iLEADTIME.Declare
	v.Local.iLEADTIMEnegative.Declare
	
	v.Local.i2.Declare
	v.Local.dDateHold.Declare
	v.Local.sDateHold.Declare
	v.Local.fDemandFor1Date.Declare
	v.Local.fCul.Declare
	v.Local.iHold.Declare

	'BN May 2019 ***
	f.Intrinsic.Control.If(v.DataTable.dtPrepareWOs.Exists)
		f.Data.DataTable.Close("dtPrepareWOs")
	f.Intrinsic.Control.EndIf	
	f.Data.DataTable.Create("dtPrepareWOs",True)
	f.Data.DataTable.AddColumn("dtPrepareWOs","Amount","Float",0)
	f.Data.DataTable.AddColumn("dtPrepareWOs","DueDate","Date")
	f.Data.DataTable.AddColumn("dtPrepareWOs","Cumulated","float",0)
	
	f.Intrinsic.Control.If(v.DataTable.dtPartDemand.Exists)
		f.Data.DataTable.Close("dtPartDemand")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("dtPartDemand",True)
	f.Data.DataTable.AddColumn("dtPartDemand","Amount","Float",0)
	f.Data.DataTable.AddColumn("dtPartDemand","DueDate","Date")
	f.Data.DataTable.AddColumn("dtPartDemand","Cumulated","float",0)		
	'BN May 2019 ***end***
	
	F.Intrinsic.Control.If(V.DataTable.dtWO0.Exists)
		F.Data.DataTable.Close("dtWO0")
		F.Data.DataTable.Close("dtWO")
	F.Intrinsic.Control.EndIf

	F.Data.DataView.Create("dtMRP","dvMRP",22,"RunQty <> 0","PART ASC,LOCATION ASC,DATE_DUE ASC")
	F.Data.DataView.ToDataTable("dtMRP","dvMRP","dtWO0",True)
	F.Data.DataView.Close("dtMRP","dvMRP")
	'RemoveColumns
	F.Data.DataTable.RemoveColumn("dtWO0","SOURCE")
	F.Data.DataTable.RemoveColumn("dtWO0","JOB")
	F.Data.DataTable.RemoveColumn("dtWO0","SUFFIX")
	F.Data.DataTable.RemoveColumn("dtWO0","SEQUENCE")
	F.Data.DataTable.RemoveColumn("dtWO0","QUANTITY")
	F.Data.DataTable.RemoveColumn("dtWO0","CURONHAND")
	F.Data.DataTable.RemoveColumn("dtWO0","CURONHAND2")
	F.Data.DataTable.RemoveColumn("dtWO0","POSTONHAND")
	F.Data.DataTable.RemoveColumn("dtWO0","REQDQTY")
	'Add Columns
	F.Data.DataTable.AddColumn("dtWO0","SELECT",Boolean,False)
	F.Data.DataTable.AddColumn("dtWO0","RTRCOMPL",Boolean)
	F.Data.DataTable.AddColumn("dtWO0","BOMCOMPL",Boolean)
	F.Data.DataTable.AddColumn("dtWO0","DUEDATE",Date)
	'Set Due Date
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtWO0.RowCount--,1)
		V.Local.dDateDue.Set(V.DataTable.dtWO0(V.Local.iCnt).DATE_DUE!FieldVal)
		F.Intrinsic.Math.Mult(V.DataTable.dtWO0(V.Local.iCnt).LEADTIME!FieldValFloat,-1,V.Local.fLeadTime)
		F.Intrinsic.Date.DateAdd("D",V.Local.fLeadTime,V.Local.dDateDue,V.Local.dDatePurch)
		F.Data.DataTable.SetValue("dtWO0",V.Local.iCnt,"DUEDATE",V.Local.dDatePurch)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'Create a Key Column
	F.Data.DataTable.AddExpressionColumn("dtWO0","PartLoc",String,"[PART]+[LOCATION]")
	'Router Complete Flag
	F.Data.Dictionary.CreateFromSQL("dRtrCompl","con","Select Rtr_Num,Complete From V_Router_Supp_Hdr Where Complete = 1;")
	F.Data.Dictionary.SetDefaultReturn("dRtrCompl",False)
	F.Data.DataTable.FillFromDictionary("dtWO0","dRtrCompl","PartLoc","RTRCOMPL")
	F.Data.Dictionary.Close("dRtrCompl")
	'BOM Complete Flag
	F.Data.Dictionary.CreateFromSQL("dBomCompl","con","Select Parent,Cast(1 As Bit) As Bom_Compl From V_Bom_Mstr Where Sequence_Bom = '0000' And Bom_Complete = 'Y';")
	F.Data.Dictionary.SetDefaultReturn("dBomCompl",False)
	F.Data.DataTable.FillFromDictionary("dtWO0","dBomCompl","PartLoc","BOMCOMPL")
	F.Data.Dictionary.Close("dBomCompl")
	'Remove Key Column
	F.Data.DataTable.RemoveColumn("dtWO0","PartLoc")
	
	'Group Parts together
	F.Data.DataView.Create("dtWO0","dvGroup")
	
	'Where dtWO generated
	F.Data.DataView.ToDataTableDistinct("dtWO0","dvGroup","dtWO","SELECT*!*PART*!*LOCATION*!*DESCRIPTION*!*PL*!*SORTCODE*!*ONHANDQTY*!*RTRCOMPL*!*BOMCOMPL*!*LEADTIME",True)
	F.Data.DataTable.AddColumn("dtWO","DUEDATE",Date)
	F.Data.DataTable.AddColumn("dtWO","RUNQTY",Float,0)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtWO.RowCount--,1)
		F.Intrinsic.String.Replace(V.DataTable.dtWO(V.Local.iCnt).PART!FieldVal,"'","''",V.Local.sPart)
		F.Intrinsic.String.Replace(V.DataTable.dtWO(V.Local.iCnt).LOCATION!FieldVal,"'","''",V.Local.sLoc)
		F.Intrinsic.String.Build("Part = '{0}' And Location = '{1}'",V.Local.sPart,V.Local.sLoc,V.Local.sFilter)
		F.Data.DataTable.Select("dtWO0",V.Local.sFilter,V.Local.sSelect)
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Data.DataTable.Compute("dtWO0","SUM(RUNQTY)",V.Local.sFilter,V.Local.fRunQty)
		F.Data.DataTable.SetValue("dtWO",V.Local.iCnt,"DUEDATE",V.DataTable.dtWO0(V.Local.sSelect(0).Long).DUEDATE!FieldVal,"RUNQTY",V.Local.fRunQty)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'BN May 2019 ***
	'InvQty
	f.Data.Dictionary.CreateFromSQL("InvQty","con","Select Part + '-' + Location as PartLoc, IsNull(Qty_Order,0) as Qty_Order from Inventory_mstr")	
	'dtAllDemand
	f.Intrinsic.Control.If(v.DataTable.dtAllDemand.Exists)
		f.Data.DataTable.Close("dtAllDemand")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtAllDemand","con","SELECT 'Work Order' AS SOURCE, JOB+'-'+SUFFIX AS RECORD,Part,Location, DATE_DUE, QTY_COMMITTED-QTY_ISSUED As QTY_REM FROM V_JOB_COMMITMENTS UNION SELECT 'Sales Order' AS SOURCE, ORDER_NO+'-'+LEFT(RECORD_NO,3) AS RECORD,Part,Location, DATE_ITEM_PROM AS DATE_DUE, QTY_BO AS QTY_REM FROM V_ORDER_LINES ORDER BY DATE_DUE ASC",True)
	f.Data.DataView.Create("dtAllDemand","dvAllDemand")
	'BN May 2019 ***End***
	
	
	f.Intrinsic.Control.For(v.Local.iCnt,V.DataTable.dtWO.RowCount--,0,-1)
		
		v.Local.fRunQty.Set(v.DataTable.dtWO(v.Local.iCnt).RunQty!FieldValString)
		v.Local.sPart.Set(v.DataTable.dtWO(v.Local.iCnt).Part!FieldValString)
		v.Local.sLoc.Set(v.DataTable.dtWO(v.Local.iCnt).Location!FieldValString)
		v.Local.dDueDate.Set(v.DataTable.dtWO(v.Local.iCnt).DueDate!FieldValString)
		v.Local.sDesc.Set(v.DataTable.dtWO(v.Local.iCnt).Description!FieldValString)
		v.Local.sPL.Set(v.DataTable.dtWO(v.Local.iCnt).PL!FieldValString)
		v.Local.sSortCode.Set(v.DataTable.dtWO(v.Local.iCnt).SORTCODE!FieldValString)
		v.Local.fOnHandQty.Set(v.DataTable.dtWO(v.Local.iCnt).ONHANDQTY!FieldValString)
		v.Local.bRTRCOMPL.Set(v.DataTable.dtWO(v.Local.iCnt).RTRCOMPL!FieldValString)
		v.Local.bBOMCOMPL.Set(v.DataTable.dtWO(v.Local.iCnt).BOMCOMPL!FieldValString)
		v.Local.iLEADTIME.Set(v.DataTable.dtWO(v.Local.iCnt).LEADTIME!FieldValString)			
		
		'BN May 2019 ***
		f.Intrinsic.String.Build("{0}-{1}",v.Local.sPart,v.Local.sLoc,v.Local.sPartloc)
		v.Local.fInvRunQty.Set(v.Dictionary.InvQty![v.Local.sPartLoc])	
		f.Intrinsic.Control.If(v.Local.fInvRunQty,>,v.Local.fRunQty)
			'Duedate is default duedate
			f.Data.DataTable.SetValue("dtWO",V.Local.iCnt,"RUNQTY",V.Local.fInvRunQty)			
		f.Intrinsic.Control.ElseIf(v.Local.fInvRunQty,>,0)
			f.Intrinsic.Math.Div(v.Local.fRunQty,v.Local.fInvRunQty,v.Local.fHold)
			f.Intrinsic.Math.Round(v.Local.fHold,0,v.Local.iNumOfRecord)
			f.Intrinsic.Control.If(v.Local.iNumOfRecord,<,v.Local.fHold)
			 	f.Intrinsic.Math.Add(v.Local.iNumOfRecord,1,v.Local.iNumOfRecord)
			f.Intrinsic.Control.EndIf
			
			F.Data.DataTable.DeleteRow("dtWO",v.Local.iCnt)
			f.Data.DataTable.AcceptChanges("dtWO")
			
			'Get all demand of this Part Location
			f.Intrinsic.String.Build("Part = '{0}' and Location = '{1}'",v.Local.sPart,v.Local.sLoc,v.Local.sFilter)
			f.Data.DataView.SetFilter("dtAllDemand","dvAllDemand",v.Local.sFilter)
			f.Data.DataView.SetSort("dtAllDemand","dvAllDemand","Date_Due Asc")
			
			'Get distinct Due Date from demand of this Part Loc
			f.Intrinsic.Control.If(v.DataTable.dtHold.Exists)
				f.Data.DataTable.Close("dtHold")
			f.Intrinsic.Control.EndIf
			f.Data.DataView.ToDataTableDistinct("dtAllDemand","dvAllDemand","dtHold","Date_Due",True)
			
			f.Data.DataTable.DeleteRow("dtPrepareWOs",-1)
			f.Data.DataTable.AcceptChanges("dtPrepareWOs")
			f.Data.DataTable.DeleteRow("dtPartDemand",-1)
			f.Data.DataTable.AcceptChanges("dtPartDemand")
			
			'Populate dtPartDemand (group by Due Date, so loop by each distinct Due Date of dtHold)
			v.Local.fCul.Set(0)					
			f.Intrinsic.Control.For(v.Local.i2,0,v.DataTable.dtHold.RowCount--,1)
				v.Local.dDateHold.Set(v.DataTable.dtHold(v.Local.i2).Date_Due!FieldValString)
				f.Intrinsic.String.Format(v.Local.dDateHold,"MM/DD/YYYY",v.Local.sDateHold)
				f.Intrinsic.String.Build("Part = '{0}' and Location = '{1}' and Date_Due = #{2}#",v.Local.sPart,v.Local.sLoc,v.Local.sDateHold,v.Local.sFilter)
				f.Data.DataTable.Compute("dtAllDemand","SUM([Qty_Rem])",v.Local.sFilter,v.Local.fDemandFor1Date)
				f.Intrinsic.Math.Add(v.Local.fCul,v.Local.fDemandFor1Date,v.Local.fCul)
				f.Data.DataTable.AddRow("dtPartDemand","Amount",v.Local.fDemandFor1Date,"DueDate",v.Local.sDateHold,"Cumulated",v.Local.fCul)
			f.Intrinsic.Control.Next(v.Local.i2)
			
			'Populate dtPrepareWOs			
			f.Intrinsic.Control.For(v.Local.i2,1,v.Local.iNumOfRecord,1)
				f.Intrinsic.Math.Mult(v.Local.i2,v.Local.fInvRunQty,v.Local.fHold)
				f.Data.DataTable.AddRow("dtPrepareWOs","Amount",v.Local.fInvRunQty,"DueDate","01/01/1900","Cumulated",v.Local.fHold)
			f.Intrinsic.Control.Next(v.Local.i2)
			
			'Parse DueDate from dtPartDemand to dtPrepareWOs
			f.Intrinsic.Control.CallSub("Parse_DueDate")
			
			f.Intrinsic.Control.For(v.Local.i2,1,v.Local.iNumOfRecord,1)
				f.Intrinsic.Math.Sub(v.Local.i2,1,v.Local.iHold)
				v.Local.dDateHold.Set(v.DataTable.dtPrepareWOs(v.Local.iHold).DueDate!FieldValString)
				f.Intrinsic.Math.Sub(0,v.Local.iLEADTIME,v.Local.iLEADTIMEnegative)
				f.Intrinsic.Date.DateAdd("D",v.Local.iLEADTIMEnegative,v.Local.dDateHold,v.Local.dDateHold)
				f.Intrinsic.String.Format(v.Local.dDateHold,"MM/DD/YYYY",v.Local.sDateHold)
				f.Data.DataTable.AddRow("dtWO","SELECT","False","PART",v.Local.sPart,"LOCATION",v.Local.sLoc,"DESCRIPTION",v.Local.sDesc,"PL",v.Local.sPL,"SORTCODE",v.Local.sSortCode,"ONHANDQTY",v.Local.fOnHandQty,"RTRCOMPL",v.Local.bRTRCOMPL,"BOMCOMPL",v.Local.bBOMCOMPL,"LEADTIME",v.Local.iLEADTIME,"DUEDATE",V.Local.sDateHold,"RunQty",v.Local.fInvRunQty)
			f.Intrinsic.Control.Next(v.Local.i2)		
			
		f.Intrinsic.Control.EndIf			
		
	f.Intrinsic.Control.Next(v.Local.iCnt)	
	''BN May 2019 ***End***
	
	f.Data.Dictionary.Close("InvQty")
	
	F.Intrinsic.Control.CallSub(LoadGVWO)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadWOs.End

Program.Sub.Parse_DueDate.Start
''BN May 2019 ***
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.fhold.Declare
	
	v.Local.fCulSched.Declare
	v.Local.fCulDem.Declare	
	v.Local.iDemand.Declare
	v.Local.iSched.Declare
	v.Local.dDueDate.Declare	
	
	v.Local.iSched.Set(-1)
	v.Local.fCulDem.Set(0)
	v.Local.fCulSched.Set(0)
	
	f.Intrinsic.Control.For(v.Local.iDemand,0,v.DataTable.dtPartDemand.RowCount--,1)	
		v.Local.fCulDem.Set(v.DataTable.dtPartDemand(v.Local.iDemand).Cumulated!FieldValString)	
		v.Local.dDueDate.Set(v.DataTable.dtPartDemand(v.Local.iDemand).DueDate!FieldValString)
		f.Intrinsic.Control.If(v.Local.fCulSched,>=,v.Local.fCulDem)
			f.Intrinsic.Control.Next(v.Local.iDemand)
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Math.Add(v.Local.iSched,1,v.Local.iSched)
		
		f.Intrinsic.Control.If(v.Local.iSched,<,v.DataTable.dtPrepareWOs.RowCount)
			v.Local.fCulSched.Set(v.DataTable.dtPrepareWOs(v.Local.iSched).Cumulated!FieldValString)
			f.Intrinsic.Control.Do
				f.Data.DataTable.SetValue("dtPrepareWOs",v.Local.iSched,"DueDate",v.Local.dDueDate)
				f.Intrinsic.Control.If(v.Local.fCulSched,>=,v.Local.fCulDem)
					f.Intrinsic.Control.ExitDo
				f.Intrinsic.Control.Else
					f.Intrinsic.Math.Add(v.Local.iSched,1,v.Local.iSched)
					f.Intrinsic.Control.If(v.Local.iSched,>=,v.DataTable.dtPrepareWOs.RowCount)
						f.Intrinsic.Control.ExitDo
					f.Intrinsic.Control.Else
						v.Local.fCulSched.Set(v.DataTable.dtPrepareWOs(v.Local.iSched).Cumulated!FieldValString)
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Loop
		f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.Next(v.Local.iDemand)	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
'BN May 2019 ***End***
Program.Sub.Parse_DueDate.End

Program.Sub.LoadGVWO.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sColumns.Declare
	V.Local.sColor.Declare
	V.Local.sKey.Declare
	
	'Set and Format Grid
	Gui.frmWO.GsGCWO.AddGridviewFromDatatable("gvWO","dtWO")
	Gui.frmWO.GsGCWO.Icon(V.Global.sGsGCIcon)
	Gui.frmWO.GsGCWO.SuspendLayout()
	Gui.frmWO.GsGCWO.SetGridViewProperty("gvWO","MultiSelect",True)
	Gui.frmWO.GsGCWO.SetGridViewProperty("gvWO","AllowSort",False)
	Gui.frmWO.GsGCWO.SetGridViewProperty("gvWO","AllowFilter",True)
	Gui.frmWO.GsGCWO.SetGridViewProperty("gvWO","OptionsDetailShowDetailTabs",False)
	Gui.frmWO.GsGCWO.SetGridViewProperty("gvWO","OptionsViewShowGroupPanel",True)
	Gui.frmWO.GsGCWO.SetGridViewProperty("gvWO","EnableAppearanceOddRow",True)
	Gui.frmWO.GsGCWO.SetGridViewProperty("gvWO","OptionsFindAlwaysVisible",True)
	Gui.frmWO.GsGCWO.SetGridViewProperty("gvWO","OptionsViewShowAutoFilterRow",True)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtWO.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmWO.GsGCWO.SetColumnProperty("gvWO",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'SELECT
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SELECT","VisibleIndex","0")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SELECT","Caption","Select")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SELECT","MinWidth","65")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SELECT","AllowEdit",True)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SELECT","ReadOnly",False)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SELECT","HeaderHAlignment","Center")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SELECT","CellHAlignment","Center")
	
	'PART
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PART","VisibleIndex","1")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PART","Caption","Part")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PART","MinWidth","115")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PART","AllowEdit",False)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PART","ReadOnly",True)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PART","HeaderHAlignment","Left")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PART","CellHAlignment","Left")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PART","CellForeColor","Blue")
	Gui.frmWO.GsGCWO.AddSummaryItem("gvWO","PART","PART","Count","","",n0)
	
	'LOCATION
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LOCATION","VisibleIndex","2")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LOCATION","Caption","Loc")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LOCATION","MinWidth","45")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LOCATION","AllowEdit",False)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LOCATION","ReadOnly",True)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LOCATION","HeaderHAlignment","Center")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LOCATION","CellHAlignment","Center")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LOCATION","CellForeColor","Blue")
	
	'DESCRIPTION
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DESCRIPTION","VisibleIndex","3")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DESCRIPTION","Caption","Description")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DESCRIPTION","MinWidth","145")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DESCRIPTION","AllowEdit",False)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DESCRIPTION","ReadOnly",True)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DESCRIPTION","HeaderHAlignment","Left")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DESCRIPTION","CellHAlignment","Left")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DESCRIPTION","CellForeColor","Blue")
	
	'PL
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PL","VisibleIndex","4")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PL","Caption","PL")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PL","MinWidth","45")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PL","AllowEdit",False)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PL","ReadOnly",True)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PL","HeaderHAlignment","Center")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","PL","CellHAlignment","Center")
	
	'SORTCODE
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SORTCODE","VisibleIndex","5")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SORTCODE","Caption","Sort Code")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SORTCODE","MinWidth","85")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SORTCODE","AllowEdit",False)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SORTCODE","ReadOnly",True)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SORTCODE","HeaderHAlignment","Center")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","SORTCODE","CellHAlignment","Center")

	'ONHANDQTY
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","ONHANDQTY","VisibleIndex","6")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","ONHANDQTY","Caption","Qty On Hand")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","ONHANDQTY","MinWidth","85")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","ONHANDQTY","AllowEdit",False)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","ONHANDQTY","ReadOnly",True)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","ONHANDQTY","HeaderHAlignment","Far")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","ONHANDQTY","CellHAlignment","Far")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","ONHANDQTY","DisplayCustomNumeric","n2")
	
	'RTRCOMPL
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RTRCOMPL","VisibleIndex","7")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RTRCOMPL","Caption","Rtr Compl")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RTRCOMPL","MinWidth","65")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RTRCOMPL","AllowEdit",False)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RTRCOMPL","ReadOnly",True)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RTRCOMPL","HeaderHAlignment","Center")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RTRCOMPL","CellHAlignment","Center")
	
	'BOMCOMPL
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","BOMCOMPL","VisibleIndex","8")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","BOMCOMPL","Caption","BOM Compl")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","BOMCOMPL","MinWidth","65")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","BOMCOMPL","AllowEdit",False)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","BOMCOMPL","ReadOnly",True)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","BOMCOMPL","HeaderHAlignment","Center")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","BOMCOMPL","CellHAlignment","Center")
	
	'LEADTIME
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LEADTIME","VisibleIndex","9")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LEADTIME","Caption","Lead Time")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LEADTIME","MinWidth","75")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LEADTIME","AllowEdit",False)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LEADTIME","ReadOnly",True)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LEADTIME","HeaderHAlignment","Center")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","LEADTIME","CellHAlignment","Center")
	
	'DUEDATE
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DUEDATE","VisibleIndex","10")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DUEDATE","Caption","Due Date")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DUEDATE","MinWidth","85")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DUEDATE","AllowEdit",True)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DUEDATE","ReadOnly",False)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DUEDATE","HeaderHAlignment","Center")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DUEDATE","CellHAlignment","Center")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DUEDATE","CellBackColor","LightYellow")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","DUEDATE","DisplayCustomDateTime","d")
	
	'RUNQTY
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RUNQTY","VisibleIndex","11")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RUNQTY","Caption","Run Qty")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RUNQTY","MinWidth","85")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RUNQTY","AllowEdit",True)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RUNQTY","ReadOnly",False)
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RUNQTY","HeaderHAlignment","Far")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RUNQTY","CellHAlignment","Far")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RUNQTY","CellBackColor","LightYellow")
	Gui.frmWO.GsGCWO.SetColumnProperty("gvWO","RUNQTY","DisplayCustomNumeric","n2")
	
	Gui.frmWO.GsGCWO.ResumeLayout()
	Gui.frmWO.GsGCWO.MainView("gvWO")
	
	Gui.frmWO.lblStatus.Visible(False)
	Gui.frmWO.progBarStatus.Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGVWO.End

Program.Sub.GsGCWO_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sParams.Declare
	V.Local.sCaption.Declare
	
	F.Intrinsic.Control.BlockEvents
	
	V.Local.sPart.Set(V.DataTable.dtWO(V.Args.RowIndex).PART!FieldValTrim)
	V.Local.sLoc.Set(V.DataTable.dtWO(V.Args.RowIndex).LOCATION!FieldValTrim)
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.CaseAny("PART","Part","LOCATION","Location")
			'Fill Demand and Supply
			F.Intrinsic.Control.If(V.Local.sLoc,=,"")
				F.Intrinsic.String.Build("Demand || Part: {0}",V.Local.sPart,V.Local.sCaption)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("Demand || Part: {0} || Loc: {1}",V.Local.sPart,V.Local.sLoc,V.Local.sCaption)
			F.Intrinsic.Control.EndIf
			Gui.frmWO.lblDemand.Caption(V.Local.sCaption)
			F.Intrinsic.Control.CallSub(LoadDemand,"Part",V.Local.sPart,"Loc",V.Local.sLoc)
			F.Intrinsic.Control.CallSub(LoadSupply,"Part",V.Local.sPart,"Loc",V.Local.sLoc)
		
		F.Intrinsic.Control.CaseAny("Description","DESCRIPTION")
			F.Intrinsic.String.Build("{0}!*!{1}!*!MR",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
			F.Global.General.CallWrapperASync(7200,V.Local.sParams)
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCWO_RowCellClick.End

Program.Sub.LoadDemand.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sColumns.Declare
	V.Local.iCnt.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtDemand.Exists)
		F.Data.DataTable.Close("dtDemand")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Replace(V.Args.Part,"'","''",V.Local.sPart)
	F.Intrinsic.String.Replace(V.Args.Loc,"'","''",V.Local.sLoc)
	
	F.Intrinsic.String.Build("SELECT 'Work Order' AS SOURCE, JOB+'-'+SUFFIX AS RECORD, DATE_DUE, QTY_COMMITTED-QTY_ISSUED As QTY_REM FROM V_JOB_COMMITMENTS WHERE PART = '{0}' AND LOCATION = '{1}' UNION SELECT 'Sales Order' AS SOURCE, ORDER_NO+'-'+LEFT(RECORD_NO,3) AS RECORD, DATE_ITEM_PROM AS DATE_DUE, QTY_BO AS QTY_REM FROM V_ORDER_LINES WHERE PART = '{0}' AND LOCATION = '{1}'   Union  select  'Forecast' as Source, FO_Number + '-' + FO_Suffix as Record,FO_Date_Due as DATE_DUE,FO_Qty_Ord - FO_Qty_Ship as QTY_REM from v_FORECAST_REQ where FO_Part = '{0}' and FO_Locn = '{1}' ORDER BY DATE_DUE ASC",V.Local.sPart,V.Local.sLoc,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtDemand","con",V.Local.sSQL,True)
	
	Gui.frmWO.GsGCDemand.AddGridViewFromDataTable("gvDemand","dtDemand")
	Gui.frmWO.GsGCDemand.ResumeLayout()
	Gui.frmWO.GsGCDemand.SetGridViewProperty("gvDemand","MultiSelect",True)
	Gui.frmWO.GsGCDemand.SetGridViewProperty("gvDemand","Editable",False)
	Gui.frmWO.GsGCDemand.SetGridViewProperty("gvDemand","ReadOnly",True)
	Gui.frmWO.GsGCDemand.SetGridViewProperty("gvDemand","AllowSort",True)
	Gui.frmWO.GsGCDemand.SetGridViewProperty("gvDemand","AllowFilter",True)
	Gui.frmWO.GsGCDemand.SetGridViewProperty("gvDemand","ShowGroupPanel",True)
	Gui.frmWO.GsGCDemand.SetGridViewProperty("gvDemand","OptionsSelectionEnableAppearanceFocusedRow",False)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtDemand.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'SOURCE
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","SOURCE","Caption","Source")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","SOURCE","MinWidth","65")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","SOURCE","HeaderHAlignment","Center")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","SOURCE","CellHAlignment","Center")
	
	'RECORD
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","RECORD","ShowCaption",False)
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","RECORD","Caption","Record")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","RECORD","MinWidth","65")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","RECORD","HeaderHAlignment","Center")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","RECORD","CellHAlignment","Center")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","RECORD","CellForeColor","Blue")
	
	'DATE_DUE
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","DATE_DUE","Caption","Due Date")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","DATE_DUE","MinWidth","85")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","DATE_DUE","HeaderHAlignment","Center")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","DATE_DUE","CellHAlignment","Center")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","DATE_DUE","DisplayCustomDatetime","d")
	
	'QTY_REM
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","QTY_REM","Caption","Rem Qty")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","QTY_REM","MinWidth","85")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","QTY_REM","HeaderHAlignment","Far")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","QTY_REM","CellHAlignment","Far")
	Gui.frmWO.GsGCDemand.SetColumnProperty("gvDemand","QTY_REM","DisplayCustomNumeric","n2")

	Gui.frmWO.GsGCDemand.ResumeLayout()
	Gui.frmWO.GsGCDemand.MainView("gvDemand")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDemand.End

Program.Sub.LoadSupply.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sColumns.Declare
	V.Local.iCnt.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtSupply.Exists)
		F.Data.DataTable.Close("dtSupply")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Replace(V.Args.Part,"'","''",V.Local.sPart)
	F.Intrinsic.String.Replace(V.Args.Loc,"'","''",V.Local.sLoc)
	
	F.Intrinsic.String.Build("SELECT 'Work Order' AS SOURCE, IF(SUFFIX = '',JOB,JOB+'-'+SUFFIX) AS RECORD, PROJECT, DATE_DUE, SCHEDULED_DUE_DATE, QTY_ORDER-QTY_COMPLETED AS QTY_REM FROM V_JOB_HEADER WHERE PART = '{0}' AND LOCATION = '{1}' AND DATE_CLOSED = '1900-01-01' ORDER BY DATE_DUE ASC;",V.Local.sPart,V.Local.sLoc,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtSupply","con",V.Local.sSQL,True)
	
	Gui.frmWO.GsGCSupply.AddGridviewFromDatatable("gvSupply","dtSupply")
	Gui.frmWO.GsGCSupply.ResumeLayout()
	Gui.frmWO.GsGCSupply.SetGridViewProperty("gvSupply","MultiSelect",True)
	Gui.frmWO.GsGCSupply.SetGridViewProperty("gvSupply","Editable",False)
	Gui.frmWO.GsGCSupply.SetGridViewProperty("gvSupply","ReadOnly",True)
	Gui.frmWO.GsGCSupply.SetGridViewProperty("gvSupply","AllowSort",True)
	Gui.frmWO.GsGCSupply.SetGridViewProperty("gvSupply","AllowFilter",True)
	Gui.frmWO.GsGCSupply.SetGridViewProperty("gvSupply","ShowGroupPanel",True)
	Gui.frmWO.GsGCSupply.SetGridViewProperty("gvSupply","OptionsSelectionEnableAppearanceFocusedRow",False)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtSupply.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'SOURCE
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","SOURCE","Caption","Source")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","SOURCE","MinWidth","65")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","SOURCE","HeaderHAlignment","Center")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","SOURCE","CellHAlignment","Center")
	
	'RECORD
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","RECORD","ShowCaption",False)
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","RECORD","Caption","Record")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","RECORD","MinWidth","65")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","RECORD","HeaderHAlignment","Center")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","RECORD","CellHAlignment","Center")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","RECORD","CellForeColor","Blue")
	
	'PROJECT
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","PROJECT","Caption","Project")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","PROJECT","MinWidth","65")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","PROJECT","HeaderHAlignment","Center")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","PROJECT","CellHAlignment","Center")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","PROJECT","CellForeColor","Blue")
	
	'DATE_DUE
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","DATE_DUE","Caption","Due Date")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","DATE_DUE","MinWidth","85")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","DATE_DUE","HeaderHAlignment","Center")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","DATE_DUE","CellHAlignment","Center")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","DATE_DUE","DisplayCustomDatetime","d")
	
	'SCHEDULED_DUE_DATE
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","SCHEDULED_DUE_DATE","Caption","Sched Due Date")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","SCHEDULED_DUE_DATE","MinWidth","85")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","SCHEDULED_DUE_DATE","HeaderHAlignment","Center")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","SCHEDULED_DUE_DATE","CellHAlignment","Center")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","SCHEDULED_DUE_DATE","DisplayCustomDatetime","d")
	
	'QTY_REM
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","QTY_REM","Caption","Rem Qty")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","QTY_REM","MinWidth","85")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","QTY_REM","HeaderHAlignment","Far")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","QTY_REM","CellHAlignment","Far")
	Gui.frmWO.GsGCSupply.SetColumnProperty("gvSupply","QTY_REM","DisplayCustomNumeric","n2")

	Gui.frmWO.GsGCSupply.ResumeLayout()
	Gui.frmWO.GsGCSupply.MainView("gvSupply")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadSupply.End

Program.Sub.Hyperlinks.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sRecord.Declare
	V.Local.sParams.Declare
	V.Local.sDT.Declare
	V.Local.sSuffix.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.ControlName)
		F.Intrinsic.Control.Case("GSGCDEMAND")
			V.Local.sDT.Set("dtDemand")
			
		F.Intrinsic.Control.Case("GSGCSUPPLY")
			V.Local.sDT.Set("dtSupply")
			
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.BlockEvents
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.CaseAny("Record","RECORD")
			F.Intrinsic.Control.If(V.DataTable.[V.Local.sDT](V.Args.RowIndex).Source!FieldVal,=,"Work Order")
				F.Intrinsic.String.Split(V.DataTable.[V.Local.sDT](V.Args.RowIndex).Record!FieldVal,"-",V.Local.sRecord)
				F.Intrinsic.Control.If(V.Local.sRecord(1).Trim,=,"OOB")
					V.Local.sSuffix.Set("")
				F.Intrinsic.Control.Else
					V.Local.sSuffix.Set(V.Local.sRecord(1).Trim)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.String.ConcatCallWrapperArgs("7",V.Local.sRecord(0).Trim,V.Local.sSuffix,"A",V.Local.sParams)
				F.Global.General.CallWrapperSync(450000,V.Local.sParams)
				
			F.Intrinsic.Control.ElseIf(V.DataTable.[V.Local.sDT](V.Args.RowIndex).Source!FieldVal,=,"Sales Order")
				F.Intrinsic.String.Split(V.DataTable.[V.Local.sDT](V.Args.RowIndex).Record!FieldVal,"-",V.Local.sRecord)
				F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sRecord(0).Trim,"V","*!*ZDR*!*",V.Local.sParams)
				F.Global.General.CallWrapperAsync(200000,V.Local.sParams)
			
			F.Intrinsic.Control.ElseIf(V.DataTable.[V.Local.sDT](V.Args.RowIndex).Source!FieldVal,=,"Purchase Order")
				'Nothing
			F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.Hyperlinks.End

Program.Sub.Comments.Start
${$5$}$2.0.0.0$}$2
${$6$}$tsmith$}$20220720165713266$}$xqPbj9atw05FglvzeFsZ9cqXP+qvG6tXtyWkKzukKAYqvUHLUmVIAfSHfCIsaZ1xul6tUmnWotI=
Program.Sub.Comments.End
